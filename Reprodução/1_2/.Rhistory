}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = -1*((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(unique(class$ano))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = -1*((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class$ano)
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = -1*((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = -1*((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
print(summary(database$aval))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = -1*((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
}
else {
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
ic regression ------
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
print(summary(database$aval))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
}
else {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
print(summary(database$aval))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
}
else {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))-1),
part_std = -1*(part_esq-1)
)
print(summary(database$aval_std))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
}
else {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
print(summary(database$aval_std))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
}
else {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
print(summary(database$aval_std))
if (unique(database$ano) %in% c(2006, 2010, 2014)) {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
std_log_models <- function(database, year) {
print(unique(database$ano))
print(class(database$ano))
database <- database %>%
mutate(
voto = as.factor(voto),
ideol_std = -1*((ideol-min(database$ideol, na.rm = T))/
(max(database$ideol, na.rm = T)-min(database$ideol, na.rm = T))-1),
aval_std = ((aval-min(database$aval, na.rm = T))/
(max(database$aval, na.rm = T)-min(database$aval, na.rm = T))),
part_std = -1*(part_esq-1)
)
print(summary(database$aval_std))
if (unique(database$ano) %in% c(2002, 2018, 2022)) {
database <- database %>%
mutate(
aval_std = -1*(aval_std-1)
)
}
print(summary(database$aval_std))
rio::export(x = database, file = paste0("eseb_",year,"_rec.xlsx"))
fit <- glm(voto ~ ideol_std + aval_std + part_esq, data = database,
family = binomial())
boxplot(database$aval_std)
tidy(fit) %>%
filter(term != '(Intercept)') %>%
mutate(ano = year,
odd = exp(estimate),
odd_up = exp(estimate + qnorm(.975) * std.error),
odd_lo = exp(estimate - qnorm(.975) * std.error))
}
for (i in 1:length(years)) {
temp <- std_log_models(datasets[[i]], years[i])
if (years[i] == 2002) {
models <- temp
}
else{
models <- rbind(models, temp)
}
}
models |>
mutate(term = ifelse(term == "part_esq", "Id. Partidária", term)) %>%
mutate(term = ifelse(term == "aval_std", "Aval. Governo", term)) %>%
mutate(term = ifelse(term == "ideol_std", "Ideologia", term)) %>%
mutate(term = as.factor(term)) %>%
mutate(term = fct_relevel(term, c("Aval. Governo","Id. Partidária", "Ideologia"))) %>%
ggplot(aes(x = ano, y = odd, color = term)) +
geom_point(position = position_dodge(width=2))+
geom_errorbar(aes(ymin = odd_up, ymax = odd_lo),
position = position_dodge(width=2))+
theme_light() +
scale_x_continuous(breaks = c(2002, 2006, 2010, 2014,
2018, 2022)) +
theme(legend.position = "bottom",
legend.title = element_blank(),
text = element_text(size = 14)) +
labs(x = "", y = '') +
scale_color_manual(values = c("grey56", "black", "grey"))
5*0.75
5*0.85
